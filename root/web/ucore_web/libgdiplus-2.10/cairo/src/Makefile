# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/cairo
pkglibdir = $(libdir)/cairo
pkgincludedir = $(includedir)/cairo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 = $(font_subset_sources_ft)
am__append_2 = $(ps_headers)
am__append_3 = $(ps_sources)
am__append_4 = cairo-ps.pc
am__append_5 = $(pdf_headers)
am__append_6 = $(pdf_sources)
am__append_7 = cairo-pdf.pc
#am__append_8 = $(png_sources)
#am__append_9 = cairo-png.pc
#am__append_10 = $(svg_headers)
#am__append_11 = $(svg_sources)
#am__append_12 = cairo-svg.pc
#am__append_13 = $(test_sources)
am__append_14 = $(xlib_headers)
am__append_15 = $(xlib_sources)
am__append_16 = cairo-xlib.pc
#am__append_17 = $(xlib_xrender_headers)
#am__append_18 = cairo-xlib-xrender.pc
#am__append_19 = $(xcb_headers)
#am__append_20 = $(xcb_sources)
#am__append_21 = cairo-xcb.pc
#am__append_22 = $(quartz_headers)
#am__append_23 = $(quartz_sources)
#am__append_24 = cairo-quartz.pc
#am__append_25 = cairo-quartz-image.h
#am__append_26 = cairo-quartz-image.pc
#am__append_27 = $(quartz_font_sources)
#am__append_28 = $(os_win32_sources)
#am__append_29 = $(win32_headers)
#am__append_30 = $(win32_sources)
#am__append_31 = cairo-win32.pc
#am__append_32 = $(win32_font_sources)
#am__append_33 = cairo-win32-font.pc
#am__append_34 = $(os2_headers)
#am__append_35 = $(os2_sources)
#am__append_36 = cairo-os2.pc
#am__append_37 = $(beos_headers)
#am__append_38 = cairo-beos.pc
#am__append_39 = $(glitz_headers)
#am__append_40 = $(glitz_sources)
#am__append_41 = cairo-glitz.pc
#am__append_42 = $(directfb_headers)
#am__append_43 = $(directfb_sources)
#am__append_44 = cairo-directfb.pc
am__append_45 = $(ft_headers)
am__append_46 = $(ft_sources)
am__append_47 = cairo-ft.pc
subdir = src
DIST_COMMON = $(am__noinst_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/cairo.pc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = cairo.pc
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__libcairo_la_SOURCES_DIST = cairo.c cairo.h cairo-private.h \
	cairo-arc.c cairo-arc-private.h cairo-array.c cairo-atomic.c \
	cairo-atomic-private.h cairo-base85-stream.c \
	cairo-bentley-ottmann.c cairo-cache.c cairo-clip.c \
	cairo-clip-private.h cairo-color.c cairo-compiler-private.h \
	cairo-debug.c cairo-fixed.c cairo-font-face.c \
	cairo-font-options.c cairo-freelist.c cairo-freelist-private.h \
	cairo-gstate.c cairo-gstate-private.h cairo-hash.c \
	cairo-hash-private.h cairo-hull.c cairo-image-surface.c \
	cairo-lzw.c cairo-misc.c cairo-malloc-private.h cairo-matrix.c \
	cairo-mutex.c cairo-mutex-private.h cairo-mutex-type-private.h \
	cairo-path.c cairo-path-private.h cairo-path-bounds.c \
	cairo-path-fill.c cairo-path-fixed.c \
	cairo-path-fixed-private.h cairo-path-stroke.c cairo-pen.c \
	cairo-polygon.c cairo-rectangle.c \
	cairo-reference-count-private.h cairo-region.c \
	cairo-region-private.h cairo-scaled-font.c \
	cairo-scaled-font-private.h cairo-skiplist.c \
	cairo-skiplist-private.h cairo-slope.c cairo-spline.c \
	cairo-stroke-style.c cairo-surface.c cairo-surface-fallback.c \
	cairo-surface-fallback-private.h cairo-surface-private.h \
	cairo-traps.c cairo-pattern.c cairo-unicode.c \
	cairo-output-stream.c cairo-output-stream-private.h \
	cairo-wideint.c cairo-wideint-private.h \
	cairo-wideint-type-private.h cairo-meta-surface.c \
	cairo-meta-surface-private.h cairo-paginated-private.h \
	cairo-paginated-surface.c cairo-paginated-surface-private.h \
	cairo-analysis-surface.c cairo-analysis-surface-private.h \
	cairoint.h cairo-ps-surface.c cairo-ps-surface-private.h \
	cairo-pdf-surface.c cairo-pdf-surface-private.h \
	cairo-pdf-operators.c cairo-pdf-operators-private.h \
	cairo-deflate-stream.c cairo-png.c cairo-svg-surface.c \
	cairo-svg-surface-private.h cairo-cff-subset.c \
	cairo-truetype-subset.c cairo-type1-fallback.c \
	cairo-type1-private.h cairo-truetype-subset-private.h \
	cairo-scaled-font-subsets.c \
	cairo-scaled-font-subsets-private.h cairo-type1-subset.c \
	test-fallback-surface.c test-fallback-surface.h \
	test-meta-surface.c test-meta-surface.h \
	test-paginated-surface.c test-paginated-surface.h \
	cairo-xlib-surface.c cairo-xlib-surface-private.h \
	cairo-xlib-display.c cairo-xlib-screen.c cairo-xlib-visual.c \
	cairo-xlib-private.h cairo-xlib-xrender-private.h \
	cairo-xcb-surface.c cairo-quartz-surface.c \
	cairo-quartz-image-surface.c cairo-quartz-private.h \
	cairo-quartz-font.c cairo-win32.c cairo-win32-surface.c \
	cairo-win32-printing-surface.c cairo-win32-private.h \
	cairo-win32-font.c cairo-os2-surface.c cairo-os2-private.h \
	cairo-glitz-surface.c cairo-glitz-private.h \
	cairo-directfb-surface.c cairo-ft-font.c cairo-ft-private.h \
	cairo-cache-private.h cairo-fixed-private.h \
	cairo-fixed-type-private.h cairo-mutex-list-private.h \
	cairo-types-private.h
am__objects_1 = libcairo_la-cairo.lo libcairo_la-cairo-arc.lo \
	libcairo_la-cairo-array.lo libcairo_la-cairo-atomic.lo \
	libcairo_la-cairo-base85-stream.lo \
	libcairo_la-cairo-bentley-ottmann.lo \
	libcairo_la-cairo-cache.lo libcairo_la-cairo-clip.lo \
	libcairo_la-cairo-color.lo libcairo_la-cairo-debug.lo \
	libcairo_la-cairo-fixed.lo libcairo_la-cairo-font-face.lo \
	libcairo_la-cairo-font-options.lo \
	libcairo_la-cairo-freelist.lo libcairo_la-cairo-gstate.lo \
	libcairo_la-cairo-hash.lo libcairo_la-cairo-hull.lo \
	libcairo_la-cairo-image-surface.lo libcairo_la-cairo-lzw.lo \
	libcairo_la-cairo-misc.lo libcairo_la-cairo-matrix.lo \
	libcairo_la-cairo-mutex.lo libcairo_la-cairo-path.lo \
	libcairo_la-cairo-path-bounds.lo \
	libcairo_la-cairo-path-fill.lo libcairo_la-cairo-path-fixed.lo \
	libcairo_la-cairo-path-stroke.lo libcairo_la-cairo-pen.lo \
	libcairo_la-cairo-polygon.lo libcairo_la-cairo-rectangle.lo \
	libcairo_la-cairo-region.lo libcairo_la-cairo-scaled-font.lo \
	libcairo_la-cairo-skiplist.lo libcairo_la-cairo-slope.lo \
	libcairo_la-cairo-spline.lo libcairo_la-cairo-stroke-style.lo \
	libcairo_la-cairo-surface.lo \
	libcairo_la-cairo-surface-fallback.lo \
	libcairo_la-cairo-traps.lo libcairo_la-cairo-pattern.lo \
	libcairo_la-cairo-unicode.lo \
	libcairo_la-cairo-output-stream.lo \
	libcairo_la-cairo-wideint.lo libcairo_la-cairo-meta-surface.lo \
	libcairo_la-cairo-paginated-surface.lo \
	libcairo_la-cairo-analysis-surface.lo
am__objects_2 = libcairo_la-cairo-ps-surface.lo
am__objects_3 = $(am__objects_2)
am__objects_4 = libcairo_la-cairo-pdf-surface.lo \
	libcairo_la-cairo-pdf-operators.lo \
	libcairo_la-cairo-deflate-stream.lo
am__objects_5 = $(am__objects_4)
am__objects_6 = libcairo_la-cairo-png.lo
#am__objects_7 = $(am__objects_6)
am__objects_8 = libcairo_la-cairo-svg-surface.lo
#am__objects_9 = $(am__objects_8)
am__objects_10 = libcairo_la-cairo-cff-subset.lo \
	libcairo_la-cairo-truetype-subset.lo \
	libcairo_la-cairo-type1-fallback.lo \
	libcairo_la-cairo-scaled-font-subsets.lo
am__objects_11 = libcairo_la-cairo-type1-subset.lo
am__objects_12 = $(am__objects_11)
am__objects_13 = $(am__objects_10) $(am__objects_12)
###am__objects_14 = $(am__objects_13)
#am__objects_14 = $(am__objects_13)
am__objects_14 = $(am__objects_13)
am__objects_15 = libcairo_la-test-fallback-surface.lo \
	libcairo_la-test-meta-surface.lo \
	libcairo_la-test-paginated-surface.lo
#am__objects_16 = $(am__objects_15)
am__objects_17 = libcairo_la-cairo-xlib-surface.lo \
	libcairo_la-cairo-xlib-display.lo \
	libcairo_la-cairo-xlib-screen.lo \
	libcairo_la-cairo-xlib-visual.lo
am__objects_18 = $(am__objects_17)
am__objects_19 = libcairo_la-cairo-xcb-surface.lo
#am__objects_20 = $(am__objects_19)
am__objects_21 = libcairo_la-cairo-quartz-surface.lo \
	libcairo_la-cairo-quartz-image-surface.lo
#am__objects_22 = $(am__objects_21)
am__objects_23 = libcairo_la-cairo-quartz-font.lo
#am__objects_24 = $(am__objects_23)
am__objects_25 = libcairo_la-cairo-win32.lo
#am__objects_26 = $(am__objects_25)
am__objects_27 = libcairo_la-cairo-win32-surface.lo \
	libcairo_la-cairo-win32-printing-surface.lo
#am__objects_28 = $(am__objects_27)
am__objects_29 = libcairo_la-cairo-win32-font.lo
#am__objects_30 = $(am__objects_29)
am__objects_31 = libcairo_la-cairo-os2-surface.lo
#am__objects_32 = $(am__objects_31)
am__objects_33 = libcairo_la-cairo-glitz-surface.lo
#am__objects_34 = $(am__objects_33)
am__objects_35 = libcairo_la-cairo-directfb-surface.lo
#am__objects_36 = $(am__objects_35)
am__objects_37 = libcairo_la-cairo-ft-font.lo
am__objects_38 = $(am__objects_37)
am__objects_39 = $(am__objects_1) $(am__objects_3) $(am__objects_5) \
	$(am__objects_7) $(am__objects_9) $(am__objects_14) \
	$(am__objects_16) $(am__objects_18) $(am__objects_20) \
	$(am__objects_22) $(am__objects_24) $(am__objects_26) \
	$(am__objects_28) $(am__objects_30) $(am__objects_32) \
	$(am__objects_34) $(am__objects_36) $(am__objects_38)
am__objects_40 =
am_libcairo_la_OBJECTS = $(am__objects_39) $(am__objects_40)
libcairo_la_OBJECTS = $(am_libcairo_la_OBJECTS)
libcairo_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libcairo_la_CFLAGS) \
	$(CFLAGS) $(libcairo_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcairo_la_SOURCES)
DIST_SOURCES = $(am__libcairo_la_SOURCES_DIST)
DATA = $(noinst_DATA)
am__noinst_HEADERS_DIST = cairo-deprecated.h cairo.h cairo-embed.h \
	cairo-ps.h cairo-pdf.h cairo-svg.h cairo-xlib.h \
	cairo-xlib-xrender.h cairo-xcb.h cairo-xcb-xrender.h \
	cairo-quartz.h cairo-quartz-image.h cairo-win32.h cairo-os2.h \
	cairo-beos.h cairo-glitz.h cairo-directfb.h cairo-ft.h
HEADERS = $(nodist_noinst_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/missing --run autoconf
AUTOHEADER = ${SHELL} /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/missing --run autoheader
AUTOMAKE = ${SHELL} /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/missing --run automake-1.10
AWK = mawk
CAIROPERF_LIBS = -lrt
CAIRO_CFLAGS = -I/usr/include/freetype2   -I/usr/include/freetype2     -I$(top_srcdir)/../pixman/pixman   -Wall -Wextra -Wsign-compare -Werror-implicit-function-declaration -Wpointer-arith -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wdeclaration-after-statement -Wold-style-definition -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing
CAIRO_LDADD = 
CAIRO_LIBS = -lz -lz -lfreetype   -lfontconfig -lfreetype   -lX11   $(top_builddir)/../pixman/pixman/libpixman-1.la -lm
CAIRO_NONPKGCONFIG_CFLAGS = 
CAIRO_NONPKGCONFIG_LIBS = -lz -lz -lm
CAIRO_REQUIRES = freetype2 >= 8.0.2 fontconfig x11 
CAIRO_VERSION_MAJOR = 1
CAIRO_VERSION_MICRO = 4
CAIRO_VERSION_MINOR = 6
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FIND = /usr/bin/find
FONTCONFIG_CFLAGS = -I/usr/include/freetype2  

# These names match automake style variable definition conventions so
# without these lines, automake will complain during the handling of 
# the libcairo_la_LIBADD below.  (The INCLUDES is an autoconf only
# term and automake does not care about it)
FONTCONFIG_LIBS = -lfontconfig -lfreetype  
FREETYPE_CFLAGS = -I/usr/include/freetype2  
FREETYPE_CONFIG = 
FREETYPE_LIBS = -lfreetype  
GLITZ_AGL_CFLAGS = 
GLITZ_AGL_LIBS = 
GLITZ_EGL_CFLAGS = 
GLITZ_EGL_LIBS = 
GLITZ_GLX_CFLAGS = 
GLITZ_GLX_LIBS = 
GLITZ_WGL_CFLAGS = 
GLITZ_WGL_LIBS = 
GREP = /bin/grep
GS = gs
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRSVG_CFLAGS = 
LIBRSVG_LIBS = 
LIBS =  -lm
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
LT_CURRENT_MINUS_AGE = 2
MAKEINFO = ${SHELL} /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cairo
PACKAGE_BUGREPORT = http://bugs.freedesktop.org/enter_bug.cgi?product=cairo
PACKAGE_NAME = cairo
PACKAGE_STRING = cairo 1.6.4
PACKAGE_TARNAME = cairo
PACKAGE_VERSION = 1.6.4
PATH_SEPARATOR = :
PKGCONFIG_REQUIRES = Requires.private
PKG_CONFIG = /usr/bin/pkg-config
POPPLER_CFLAGS = 
POPPLER_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHTOOL = 
STRIP = strip
VERSION = 1.6.4
VERSION_INFO = 19:5:17
XARGS = /usr/bin/xargs
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/cairo/src
abs_srcdir = /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/cairo/src
abs_top_builddir = /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/cairo
abs_top_srcdir = /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/cairo
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
directfb_CFLAGS = 
directfb_LIBS = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
glitz_CFLAGS = 
glitz_LIBS = 
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/nancy/Desktop/ucore_os_web/ucore_os_web/root/web/ucore_web/libgdiplus-2.10/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
png_CFLAGS = 
png_LIBS = 
png_REQUIRES = 
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
xcb_CFLAGS = 
xcb_LIBS = 
xlib_CFLAGS =   
xlib_LIBS = -lX11   
xlib_xrender_CFLAGS = 
xlib_xrender_LIBS = 
backend_pkgconfigs = $(am__append_4) $(am__append_7) $(am__append_9) \
	$(am__append_12) $(am__append_16) $(am__append_18) \
	$(am__append_21) $(am__append_24) $(am__append_26) \
	$(am__append_31) $(am__append_33) $(am__append_36) \
	$(am__append_38) $(am__append_41) $(am__append_44) \
	$(am__append_47)
cairo_base_headers = cairo.h cairo-embed.h
cairo_base_sources = \
	cairo.c					\
	cairo.h					\
	cairo-private.h				\
	cairo-arc.c				\
	cairo-arc-private.h			\
	cairo-array.c				\
	cairo-atomic.c				\
	cairo-atomic-private.h			\
	cairo-base85-stream.c			\
	cairo-bentley-ottmann.c			\
	cairo-cache.c				\
	cairo-clip.c				\
	cairo-clip-private.h			\
	cairo-color.c				\
	cairo-compiler-private.h		\
	cairo-debug.c				\
	cairo-fixed.c				\
	cairo-font-face.c			\
	cairo-font-options.c			\
	cairo-freelist.c			\
	cairo-freelist-private.h		\
	cairo-gstate.c				\
	cairo-gstate-private.h			\
	cairo-hash.c				\
	cairo-hash-private.h			\
	cairo-hull.c				\
	cairo-image-surface.c			\
	cairo-lzw.c				\
	cairo-misc.c				\
	cairo-malloc-private.h			\
	cairo-matrix.c				\
	cairo-mutex.c				\
	cairo-mutex-private.h			\
	cairo-mutex-type-private.h		\
	cairo-path.c				\
	cairo-path-private.h			\
	cairo-path-bounds.c			\
	cairo-path-fill.c			\
	cairo-path-fixed.c			\
	cairo-path-fixed-private.h		\
	cairo-path-stroke.c			\
	cairo-pen.c				\
	cairo-polygon.c				\
	cairo-rectangle.c			\
	cairo-reference-count-private.h		\
	cairo-region.c				\
	cairo-region-private.h			\
	cairo-scaled-font.c			\
	cairo-scaled-font-private.h		\
	cairo-skiplist.c			\
	cairo-skiplist-private.h		\
	cairo-slope.c				\
	cairo-spline.c				\
	cairo-stroke-style.c			\
	cairo-surface.c				\
	cairo-surface-fallback.c		\
	cairo-surface-fallback-private.h	\
	cairo-surface-private.h			\
	cairo-traps.c				\
	cairo-pattern.c				\
	cairo-unicode.c				\
	cairo-output-stream.c			\
	cairo-output-stream-private.h		\
	cairo-wideint.c				\
	cairo-wideint-private.h			\
	cairo-wideint-type-private.h		\
	cairo-meta-surface.c			\
	cairo-meta-surface-private.h		\
	cairo-paginated-private.h		\
	cairo-paginated-surface.c		\
	cairo-paginated-surface-private.h	\
	cairo-analysis-surface.c		\
	cairo-analysis-surface-private.h	\
	cairoint.h

cairo_all_sources = $(cairo_base_sources) $(cairo_base_headers) \
	$(font_subset_sources_base) $(font_subset_sources_ft) \
	$(ps_headers) $(ps_sources) $(pdf_headers) $(pdf_sources) \
	$(png_sources) $(svg_headers) $(svg_sources) $(test_sources) \
	$(xlib_headers) $(xlib_sources) $(xlib_xrender_headers) \
	$(xcb_headers) $(xcb_sources) $(quartz_headers) \
	$(quartz_sources) $(quartz_font_sources) $(os_win32_sources) \
	$(win32_headers) $(win32_sources) $(win32_font_sources) \
	$(os2_headers) $(os2_sources) $(beos_headers) $(beos_sources) \
	$(glitz_headers) $(glitz_sources) $(directfb_headers) \
	$(directfb_sources) $(ft_headers) $(ft_sources)
cairo_headers = $(cairo_base_headers) $(am__append_2) $(am__append_5) \
	$(am__append_10) $(am__append_14) $(am__append_17) \
	$(am__append_19) $(am__append_22) $(am__append_25) \
	$(am__append_29) $(am__append_34) $(am__append_37) \
	$(am__append_39) $(am__append_42) $(am__append_45)
cairo_sources = $(cairo_base_sources) $(am__append_3) $(am__append_6) \
	$(am__append_8) $(am__append_11) \
	$(libcairo_font_subset_sources) $(am__append_13) \
	$(am__append_15) $(am__append_20) $(am__append_23) \
	$(am__append_27) $(am__append_28) $(am__append_30) \
	$(am__append_32) $(am__append_35) $(am__append_40) \
	$(am__append_43) $(am__append_46)
font_subset_sources_base = \
	cairo-cff-subset.c			\
	cairo-truetype-subset.c			\
	cairo-type1-fallback.c			\
	cairo-type1-private.h			\
	cairo-truetype-subset-private.h		\
	cairo-scaled-font-subsets.c		\
	cairo-scaled-font-subsets-private.h

font_subset_sources_ft = cairo-type1-subset.c
font_subset_sources = $(font_subset_sources_base) $(am__append_1)
ps_headers = cairo-ps.h
ps_sources = cairo-ps-surface.c cairo-ps-surface-private.h
libcairo_font_subset_sources = $(font_subset_sources)
libcairo_font_subset_sources = $(font_subset_sources)
#libcairo_font_subset_sources = $(font_subset_sources)
pdf_headers = cairo-pdf.h
pdf_sources = cairo-pdf-surface.c cairo-pdf-surface-private.h \
	      cairo-pdf-operators.c cairo-pdf-operators-private.h \
	      cairo-deflate-stream.c

png_sources = cairo-png.c
svg_headers = cairo-svg.h
svg_sources = cairo-svg-surface.c cairo-svg-surface-private.h
test_sources = test-fallback-surface.c test-fallback-surface.h \
	       test-meta-surface.c test-meta-surface.h		\
	       test-paginated-surface.c test-paginated-surface.h

xlib_headers = cairo-xlib.h
xlib_sources = cairo-xlib-surface.c \
		cairo-xlib-surface-private.h \
		cairo-xlib-display.c \
		cairo-xlib-screen.c \
		cairo-xlib-visual.c \
		cairo-xlib-private.h \
		cairo-xlib-xrender-private.h

xlib_xrender_headers = cairo-xlib-xrender.h
xcb_headers = cairo-xcb.h cairo-xcb-xrender.h
xcb_sources = cairo-xcb-surface.c
quartz_headers = cairo-quartz.h
quartz_sources = cairo-quartz-surface.c cairo-quartz-image-surface.c cairo-quartz-private.h
quartz_font_sources = cairo-quartz-font.c
os_win32_sources = cairo-win32.c
#export_symbols = -export-symbols cairo.def
#cairo_def_dependency = cairo.def
win32_headers = cairo-win32.h
win32_sources = cairo-win32-surface.c cairo-win32-printing-surface.c cairo-win32-private.h
win32_font_sources = cairo-win32-font.c
os2_headers = cairo-os2.h
os2_sources = cairo-os2-surface.c cairo-os2-private.h
beos_headers = cairo-beos.h
beos_sources = cairo-beos-surface.cpp

#noinst_LTLIBRARIES = libcairo_beos.la
#libcairo_beos_la_SOURCES = $(libcairo_beos_sources)
# BeOS system headers trigger this warning
#libcairo_beos_la_CXXFLAGS = -Wno-multichar
glitz_headers = cairo-glitz.h
glitz_sources = cairo-glitz-surface.c cairo-glitz-private.h
directfb_headers = cairo-directfb.h
directfb_sources = cairo-directfb-surface.c
ft_headers = cairo-ft.h
ft_sources = cairo-ft-font.c cairo-ft-private.h
XRENDER_LIBS = @XRENDER_LIBS@
cairoincludedir = $(includedir)/cairo
noinst_HEADERS = \
	cairo-deprecated.h		\
	$(cairo_headers)

nodist_noinst_HEADERS = \
	cairo-features.h

noinst_LTLIBRARIES = libcairo.la

# source files that cannot be passed to compiler directly.
# mostly when they depend recursively on cairoint.h.  that is,
# cairoint.h includes them in the middle.
cairo_special_sources = \
	cairo-cache-private.h			\
	cairo-fixed-private.h			\
	cairo-fixed-type-private.h		\
	cairo-mutex-list-private.h		\
	cairo-types-private.h

libcairo_la_SOURCES = \
	$(cairo_sources)			\
	$(cairo_special_sources)

cairo_all_source_file = \
	$(cairo_all_sources)			\
	$(cairo_special_sources)

libcairo_la_LDFLAGS = -version-info 19:5:17 -no-undefined $(export_symbols)
libcairo_la_CFLAGS = -I$(srcdir) $(CAIRO_CFLAGS)
libcairo_la_LIBADD = $(CAIRO_LIBS) $(CAIRO_LDADD)
libcairo_la_DEPENDENCIES = $(cairo_def_dependency)
pkgconfigdir = $(libdir)/pkgconfig
noinst_DATA = cairo.pc $(backend_pkgconfigs)
DISTCLEANFILES = $(backend_pkgconfigs) cairo-features.h \
	cairo-no-features.h check-has-hidden-symbols.i
EXTRA_DIST = cairo-backend.pc.in $(TESTS) check-has-hidden-symbols.c \
	Makefile.win32
CLEANFILES = cairo.def
TESTS_ENVIRONMENT = srcdir="$(srcdir)" MAKE="$(MAKE)" cairo_all_source_file="$(cairo_all_source_file)"
TESTS = check-def.sh check-plt.sh check-headers.sh check-cairoint.sh check-doc-syntax.sh
SPARSE = sparse
SPLINT = splint -badflag
all: all-am

.SUFFIXES:
.SUFFIXES: .c .i .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
cairo.pc: $(top_builddir)/config.status $(srcdir)/cairo.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcairo.la: $(libcairo_la_OBJECTS) $(libcairo_la_DEPENDENCIES) 
	$(libcairo_la_LINK)  $(libcairo_la_OBJECTS) $(libcairo_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcairo_la-cairo-analysis-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-arc.Plo
include ./$(DEPDIR)/libcairo_la-cairo-array.Plo
include ./$(DEPDIR)/libcairo_la-cairo-atomic.Plo
include ./$(DEPDIR)/libcairo_la-cairo-base85-stream.Plo
include ./$(DEPDIR)/libcairo_la-cairo-bentley-ottmann.Plo
include ./$(DEPDIR)/libcairo_la-cairo-cache.Plo
include ./$(DEPDIR)/libcairo_la-cairo-cff-subset.Plo
include ./$(DEPDIR)/libcairo_la-cairo-clip.Plo
include ./$(DEPDIR)/libcairo_la-cairo-color.Plo
include ./$(DEPDIR)/libcairo_la-cairo-debug.Plo
include ./$(DEPDIR)/libcairo_la-cairo-deflate-stream.Plo
include ./$(DEPDIR)/libcairo_la-cairo-directfb-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-fixed.Plo
include ./$(DEPDIR)/libcairo_la-cairo-font-face.Plo
include ./$(DEPDIR)/libcairo_la-cairo-font-options.Plo
include ./$(DEPDIR)/libcairo_la-cairo-freelist.Plo
include ./$(DEPDIR)/libcairo_la-cairo-ft-font.Plo
include ./$(DEPDIR)/libcairo_la-cairo-glitz-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-gstate.Plo
include ./$(DEPDIR)/libcairo_la-cairo-hash.Plo
include ./$(DEPDIR)/libcairo_la-cairo-hull.Plo
include ./$(DEPDIR)/libcairo_la-cairo-image-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-lzw.Plo
include ./$(DEPDIR)/libcairo_la-cairo-matrix.Plo
include ./$(DEPDIR)/libcairo_la-cairo-meta-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-misc.Plo
include ./$(DEPDIR)/libcairo_la-cairo-mutex.Plo
include ./$(DEPDIR)/libcairo_la-cairo-os2-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-output-stream.Plo
include ./$(DEPDIR)/libcairo_la-cairo-paginated-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-path-bounds.Plo
include ./$(DEPDIR)/libcairo_la-cairo-path-fill.Plo
include ./$(DEPDIR)/libcairo_la-cairo-path-fixed.Plo
include ./$(DEPDIR)/libcairo_la-cairo-path-stroke.Plo
include ./$(DEPDIR)/libcairo_la-cairo-path.Plo
include ./$(DEPDIR)/libcairo_la-cairo-pattern.Plo
include ./$(DEPDIR)/libcairo_la-cairo-pdf-operators.Plo
include ./$(DEPDIR)/libcairo_la-cairo-pdf-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-pen.Plo
include ./$(DEPDIR)/libcairo_la-cairo-png.Plo
include ./$(DEPDIR)/libcairo_la-cairo-polygon.Plo
include ./$(DEPDIR)/libcairo_la-cairo-ps-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-quartz-font.Plo
include ./$(DEPDIR)/libcairo_la-cairo-quartz-image-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-quartz-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-rectangle.Plo
include ./$(DEPDIR)/libcairo_la-cairo-region.Plo
include ./$(DEPDIR)/libcairo_la-cairo-scaled-font-subsets.Plo
include ./$(DEPDIR)/libcairo_la-cairo-scaled-font.Plo
include ./$(DEPDIR)/libcairo_la-cairo-skiplist.Plo
include ./$(DEPDIR)/libcairo_la-cairo-slope.Plo
include ./$(DEPDIR)/libcairo_la-cairo-spline.Plo
include ./$(DEPDIR)/libcairo_la-cairo-stroke-style.Plo
include ./$(DEPDIR)/libcairo_la-cairo-surface-fallback.Plo
include ./$(DEPDIR)/libcairo_la-cairo-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-svg-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-traps.Plo
include ./$(DEPDIR)/libcairo_la-cairo-truetype-subset.Plo
include ./$(DEPDIR)/libcairo_la-cairo-type1-fallback.Plo
include ./$(DEPDIR)/libcairo_la-cairo-type1-subset.Plo
include ./$(DEPDIR)/libcairo_la-cairo-unicode.Plo
include ./$(DEPDIR)/libcairo_la-cairo-wideint.Plo
include ./$(DEPDIR)/libcairo_la-cairo-win32-font.Plo
include ./$(DEPDIR)/libcairo_la-cairo-win32-printing-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-win32-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-win32.Plo
include ./$(DEPDIR)/libcairo_la-cairo-xcb-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-xlib-display.Plo
include ./$(DEPDIR)/libcairo_la-cairo-xlib-screen.Plo
include ./$(DEPDIR)/libcairo_la-cairo-xlib-surface.Plo
include ./$(DEPDIR)/libcairo_la-cairo-xlib-visual.Plo
include ./$(DEPDIR)/libcairo_la-cairo.Plo
include ./$(DEPDIR)/libcairo_la-test-fallback-surface.Plo
include ./$(DEPDIR)/libcairo_la-test-meta-surface.Plo
include ./$(DEPDIR)/libcairo_la-test-paginated-surface.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libcairo_la-cairo.lo: cairo.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo.Tpo -c -o libcairo_la-cairo.lo `test -f 'cairo.c' || echo '$(srcdir)/'`cairo.c
	mv -f $(DEPDIR)/libcairo_la-cairo.Tpo $(DEPDIR)/libcairo_la-cairo.Plo
#	source='cairo.c' object='libcairo_la-cairo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo.lo `test -f 'cairo.c' || echo '$(srcdir)/'`cairo.c

libcairo_la-cairo-arc.lo: cairo-arc.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-arc.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-arc.Tpo -c -o libcairo_la-cairo-arc.lo `test -f 'cairo-arc.c' || echo '$(srcdir)/'`cairo-arc.c
	mv -f $(DEPDIR)/libcairo_la-cairo-arc.Tpo $(DEPDIR)/libcairo_la-cairo-arc.Plo
#	source='cairo-arc.c' object='libcairo_la-cairo-arc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-arc.lo `test -f 'cairo-arc.c' || echo '$(srcdir)/'`cairo-arc.c

libcairo_la-cairo-array.lo: cairo-array.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-array.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-array.Tpo -c -o libcairo_la-cairo-array.lo `test -f 'cairo-array.c' || echo '$(srcdir)/'`cairo-array.c
	mv -f $(DEPDIR)/libcairo_la-cairo-array.Tpo $(DEPDIR)/libcairo_la-cairo-array.Plo
#	source='cairo-array.c' object='libcairo_la-cairo-array.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-array.lo `test -f 'cairo-array.c' || echo '$(srcdir)/'`cairo-array.c

libcairo_la-cairo-atomic.lo: cairo-atomic.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-atomic.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-atomic.Tpo -c -o libcairo_la-cairo-atomic.lo `test -f 'cairo-atomic.c' || echo '$(srcdir)/'`cairo-atomic.c
	mv -f $(DEPDIR)/libcairo_la-cairo-atomic.Tpo $(DEPDIR)/libcairo_la-cairo-atomic.Plo
#	source='cairo-atomic.c' object='libcairo_la-cairo-atomic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-atomic.lo `test -f 'cairo-atomic.c' || echo '$(srcdir)/'`cairo-atomic.c

libcairo_la-cairo-base85-stream.lo: cairo-base85-stream.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-base85-stream.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-base85-stream.Tpo -c -o libcairo_la-cairo-base85-stream.lo `test -f 'cairo-base85-stream.c' || echo '$(srcdir)/'`cairo-base85-stream.c
	mv -f $(DEPDIR)/libcairo_la-cairo-base85-stream.Tpo $(DEPDIR)/libcairo_la-cairo-base85-stream.Plo
#	source='cairo-base85-stream.c' object='libcairo_la-cairo-base85-stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-base85-stream.lo `test -f 'cairo-base85-stream.c' || echo '$(srcdir)/'`cairo-base85-stream.c

libcairo_la-cairo-bentley-ottmann.lo: cairo-bentley-ottmann.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-bentley-ottmann.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-bentley-ottmann.Tpo -c -o libcairo_la-cairo-bentley-ottmann.lo `test -f 'cairo-bentley-ottmann.c' || echo '$(srcdir)/'`cairo-bentley-ottmann.c
	mv -f $(DEPDIR)/libcairo_la-cairo-bentley-ottmann.Tpo $(DEPDIR)/libcairo_la-cairo-bentley-ottmann.Plo
#	source='cairo-bentley-ottmann.c' object='libcairo_la-cairo-bentley-ottmann.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-bentley-ottmann.lo `test -f 'cairo-bentley-ottmann.c' || echo '$(srcdir)/'`cairo-bentley-ottmann.c

libcairo_la-cairo-cache.lo: cairo-cache.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-cache.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-cache.Tpo -c -o libcairo_la-cairo-cache.lo `test -f 'cairo-cache.c' || echo '$(srcdir)/'`cairo-cache.c
	mv -f $(DEPDIR)/libcairo_la-cairo-cache.Tpo $(DEPDIR)/libcairo_la-cairo-cache.Plo
#	source='cairo-cache.c' object='libcairo_la-cairo-cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-cache.lo `test -f 'cairo-cache.c' || echo '$(srcdir)/'`cairo-cache.c

libcairo_la-cairo-clip.lo: cairo-clip.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-clip.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-clip.Tpo -c -o libcairo_la-cairo-clip.lo `test -f 'cairo-clip.c' || echo '$(srcdir)/'`cairo-clip.c
	mv -f $(DEPDIR)/libcairo_la-cairo-clip.Tpo $(DEPDIR)/libcairo_la-cairo-clip.Plo
#	source='cairo-clip.c' object='libcairo_la-cairo-clip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-clip.lo `test -f 'cairo-clip.c' || echo '$(srcdir)/'`cairo-clip.c

libcairo_la-cairo-color.lo: cairo-color.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-color.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-color.Tpo -c -o libcairo_la-cairo-color.lo `test -f 'cairo-color.c' || echo '$(srcdir)/'`cairo-color.c
	mv -f $(DEPDIR)/libcairo_la-cairo-color.Tpo $(DEPDIR)/libcairo_la-cairo-color.Plo
#	source='cairo-color.c' object='libcairo_la-cairo-color.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-color.lo `test -f 'cairo-color.c' || echo '$(srcdir)/'`cairo-color.c

libcairo_la-cairo-debug.lo: cairo-debug.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-debug.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-debug.Tpo -c -o libcairo_la-cairo-debug.lo `test -f 'cairo-debug.c' || echo '$(srcdir)/'`cairo-debug.c
	mv -f $(DEPDIR)/libcairo_la-cairo-debug.Tpo $(DEPDIR)/libcairo_la-cairo-debug.Plo
#	source='cairo-debug.c' object='libcairo_la-cairo-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-debug.lo `test -f 'cairo-debug.c' || echo '$(srcdir)/'`cairo-debug.c

libcairo_la-cairo-fixed.lo: cairo-fixed.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-fixed.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-fixed.Tpo -c -o libcairo_la-cairo-fixed.lo `test -f 'cairo-fixed.c' || echo '$(srcdir)/'`cairo-fixed.c
	mv -f $(DEPDIR)/libcairo_la-cairo-fixed.Tpo $(DEPDIR)/libcairo_la-cairo-fixed.Plo
#	source='cairo-fixed.c' object='libcairo_la-cairo-fixed.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-fixed.lo `test -f 'cairo-fixed.c' || echo '$(srcdir)/'`cairo-fixed.c

libcairo_la-cairo-font-face.lo: cairo-font-face.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-font-face.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-font-face.Tpo -c -o libcairo_la-cairo-font-face.lo `test -f 'cairo-font-face.c' || echo '$(srcdir)/'`cairo-font-face.c
	mv -f $(DEPDIR)/libcairo_la-cairo-font-face.Tpo $(DEPDIR)/libcairo_la-cairo-font-face.Plo
#	source='cairo-font-face.c' object='libcairo_la-cairo-font-face.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-font-face.lo `test -f 'cairo-font-face.c' || echo '$(srcdir)/'`cairo-font-face.c

libcairo_la-cairo-font-options.lo: cairo-font-options.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-font-options.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-font-options.Tpo -c -o libcairo_la-cairo-font-options.lo `test -f 'cairo-font-options.c' || echo '$(srcdir)/'`cairo-font-options.c
	mv -f $(DEPDIR)/libcairo_la-cairo-font-options.Tpo $(DEPDIR)/libcairo_la-cairo-font-options.Plo
#	source='cairo-font-options.c' object='libcairo_la-cairo-font-options.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-font-options.lo `test -f 'cairo-font-options.c' || echo '$(srcdir)/'`cairo-font-options.c

libcairo_la-cairo-freelist.lo: cairo-freelist.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-freelist.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-freelist.Tpo -c -o libcairo_la-cairo-freelist.lo `test -f 'cairo-freelist.c' || echo '$(srcdir)/'`cairo-freelist.c
	mv -f $(DEPDIR)/libcairo_la-cairo-freelist.Tpo $(DEPDIR)/libcairo_la-cairo-freelist.Plo
#	source='cairo-freelist.c' object='libcairo_la-cairo-freelist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-freelist.lo `test -f 'cairo-freelist.c' || echo '$(srcdir)/'`cairo-freelist.c

libcairo_la-cairo-gstate.lo: cairo-gstate.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-gstate.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-gstate.Tpo -c -o libcairo_la-cairo-gstate.lo `test -f 'cairo-gstate.c' || echo '$(srcdir)/'`cairo-gstate.c
	mv -f $(DEPDIR)/libcairo_la-cairo-gstate.Tpo $(DEPDIR)/libcairo_la-cairo-gstate.Plo
#	source='cairo-gstate.c' object='libcairo_la-cairo-gstate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-gstate.lo `test -f 'cairo-gstate.c' || echo '$(srcdir)/'`cairo-gstate.c

libcairo_la-cairo-hash.lo: cairo-hash.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-hash.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-hash.Tpo -c -o libcairo_la-cairo-hash.lo `test -f 'cairo-hash.c' || echo '$(srcdir)/'`cairo-hash.c
	mv -f $(DEPDIR)/libcairo_la-cairo-hash.Tpo $(DEPDIR)/libcairo_la-cairo-hash.Plo
#	source='cairo-hash.c' object='libcairo_la-cairo-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-hash.lo `test -f 'cairo-hash.c' || echo '$(srcdir)/'`cairo-hash.c

libcairo_la-cairo-hull.lo: cairo-hull.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-hull.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-hull.Tpo -c -o libcairo_la-cairo-hull.lo `test -f 'cairo-hull.c' || echo '$(srcdir)/'`cairo-hull.c
	mv -f $(DEPDIR)/libcairo_la-cairo-hull.Tpo $(DEPDIR)/libcairo_la-cairo-hull.Plo
#	source='cairo-hull.c' object='libcairo_la-cairo-hull.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-hull.lo `test -f 'cairo-hull.c' || echo '$(srcdir)/'`cairo-hull.c

libcairo_la-cairo-image-surface.lo: cairo-image-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-image-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-image-surface.Tpo -c -o libcairo_la-cairo-image-surface.lo `test -f 'cairo-image-surface.c' || echo '$(srcdir)/'`cairo-image-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-image-surface.Tpo $(DEPDIR)/libcairo_la-cairo-image-surface.Plo
#	source='cairo-image-surface.c' object='libcairo_la-cairo-image-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-image-surface.lo `test -f 'cairo-image-surface.c' || echo '$(srcdir)/'`cairo-image-surface.c

libcairo_la-cairo-lzw.lo: cairo-lzw.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-lzw.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-lzw.Tpo -c -o libcairo_la-cairo-lzw.lo `test -f 'cairo-lzw.c' || echo '$(srcdir)/'`cairo-lzw.c
	mv -f $(DEPDIR)/libcairo_la-cairo-lzw.Tpo $(DEPDIR)/libcairo_la-cairo-lzw.Plo
#	source='cairo-lzw.c' object='libcairo_la-cairo-lzw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-lzw.lo `test -f 'cairo-lzw.c' || echo '$(srcdir)/'`cairo-lzw.c

libcairo_la-cairo-misc.lo: cairo-misc.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-misc.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-misc.Tpo -c -o libcairo_la-cairo-misc.lo `test -f 'cairo-misc.c' || echo '$(srcdir)/'`cairo-misc.c
	mv -f $(DEPDIR)/libcairo_la-cairo-misc.Tpo $(DEPDIR)/libcairo_la-cairo-misc.Plo
#	source='cairo-misc.c' object='libcairo_la-cairo-misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-misc.lo `test -f 'cairo-misc.c' || echo '$(srcdir)/'`cairo-misc.c

libcairo_la-cairo-matrix.lo: cairo-matrix.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-matrix.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-matrix.Tpo -c -o libcairo_la-cairo-matrix.lo `test -f 'cairo-matrix.c' || echo '$(srcdir)/'`cairo-matrix.c
	mv -f $(DEPDIR)/libcairo_la-cairo-matrix.Tpo $(DEPDIR)/libcairo_la-cairo-matrix.Plo
#	source='cairo-matrix.c' object='libcairo_la-cairo-matrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-matrix.lo `test -f 'cairo-matrix.c' || echo '$(srcdir)/'`cairo-matrix.c

libcairo_la-cairo-mutex.lo: cairo-mutex.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-mutex.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-mutex.Tpo -c -o libcairo_la-cairo-mutex.lo `test -f 'cairo-mutex.c' || echo '$(srcdir)/'`cairo-mutex.c
	mv -f $(DEPDIR)/libcairo_la-cairo-mutex.Tpo $(DEPDIR)/libcairo_la-cairo-mutex.Plo
#	source='cairo-mutex.c' object='libcairo_la-cairo-mutex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-mutex.lo `test -f 'cairo-mutex.c' || echo '$(srcdir)/'`cairo-mutex.c

libcairo_la-cairo-path.lo: cairo-path.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-path.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-path.Tpo -c -o libcairo_la-cairo-path.lo `test -f 'cairo-path.c' || echo '$(srcdir)/'`cairo-path.c
	mv -f $(DEPDIR)/libcairo_la-cairo-path.Tpo $(DEPDIR)/libcairo_la-cairo-path.Plo
#	source='cairo-path.c' object='libcairo_la-cairo-path.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-path.lo `test -f 'cairo-path.c' || echo '$(srcdir)/'`cairo-path.c

libcairo_la-cairo-path-bounds.lo: cairo-path-bounds.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-path-bounds.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-path-bounds.Tpo -c -o libcairo_la-cairo-path-bounds.lo `test -f 'cairo-path-bounds.c' || echo '$(srcdir)/'`cairo-path-bounds.c
	mv -f $(DEPDIR)/libcairo_la-cairo-path-bounds.Tpo $(DEPDIR)/libcairo_la-cairo-path-bounds.Plo
#	source='cairo-path-bounds.c' object='libcairo_la-cairo-path-bounds.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-path-bounds.lo `test -f 'cairo-path-bounds.c' || echo '$(srcdir)/'`cairo-path-bounds.c

libcairo_la-cairo-path-fill.lo: cairo-path-fill.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-path-fill.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-path-fill.Tpo -c -o libcairo_la-cairo-path-fill.lo `test -f 'cairo-path-fill.c' || echo '$(srcdir)/'`cairo-path-fill.c
	mv -f $(DEPDIR)/libcairo_la-cairo-path-fill.Tpo $(DEPDIR)/libcairo_la-cairo-path-fill.Plo
#	source='cairo-path-fill.c' object='libcairo_la-cairo-path-fill.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-path-fill.lo `test -f 'cairo-path-fill.c' || echo '$(srcdir)/'`cairo-path-fill.c

libcairo_la-cairo-path-fixed.lo: cairo-path-fixed.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-path-fixed.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-path-fixed.Tpo -c -o libcairo_la-cairo-path-fixed.lo `test -f 'cairo-path-fixed.c' || echo '$(srcdir)/'`cairo-path-fixed.c
	mv -f $(DEPDIR)/libcairo_la-cairo-path-fixed.Tpo $(DEPDIR)/libcairo_la-cairo-path-fixed.Plo
#	source='cairo-path-fixed.c' object='libcairo_la-cairo-path-fixed.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-path-fixed.lo `test -f 'cairo-path-fixed.c' || echo '$(srcdir)/'`cairo-path-fixed.c

libcairo_la-cairo-path-stroke.lo: cairo-path-stroke.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-path-stroke.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-path-stroke.Tpo -c -o libcairo_la-cairo-path-stroke.lo `test -f 'cairo-path-stroke.c' || echo '$(srcdir)/'`cairo-path-stroke.c
	mv -f $(DEPDIR)/libcairo_la-cairo-path-stroke.Tpo $(DEPDIR)/libcairo_la-cairo-path-stroke.Plo
#	source='cairo-path-stroke.c' object='libcairo_la-cairo-path-stroke.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-path-stroke.lo `test -f 'cairo-path-stroke.c' || echo '$(srcdir)/'`cairo-path-stroke.c

libcairo_la-cairo-pen.lo: cairo-pen.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-pen.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-pen.Tpo -c -o libcairo_la-cairo-pen.lo `test -f 'cairo-pen.c' || echo '$(srcdir)/'`cairo-pen.c
	mv -f $(DEPDIR)/libcairo_la-cairo-pen.Tpo $(DEPDIR)/libcairo_la-cairo-pen.Plo
#	source='cairo-pen.c' object='libcairo_la-cairo-pen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-pen.lo `test -f 'cairo-pen.c' || echo '$(srcdir)/'`cairo-pen.c

libcairo_la-cairo-polygon.lo: cairo-polygon.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-polygon.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-polygon.Tpo -c -o libcairo_la-cairo-polygon.lo `test -f 'cairo-polygon.c' || echo '$(srcdir)/'`cairo-polygon.c
	mv -f $(DEPDIR)/libcairo_la-cairo-polygon.Tpo $(DEPDIR)/libcairo_la-cairo-polygon.Plo
#	source='cairo-polygon.c' object='libcairo_la-cairo-polygon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-polygon.lo `test -f 'cairo-polygon.c' || echo '$(srcdir)/'`cairo-polygon.c

libcairo_la-cairo-rectangle.lo: cairo-rectangle.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-rectangle.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-rectangle.Tpo -c -o libcairo_la-cairo-rectangle.lo `test -f 'cairo-rectangle.c' || echo '$(srcdir)/'`cairo-rectangle.c
	mv -f $(DEPDIR)/libcairo_la-cairo-rectangle.Tpo $(DEPDIR)/libcairo_la-cairo-rectangle.Plo
#	source='cairo-rectangle.c' object='libcairo_la-cairo-rectangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-rectangle.lo `test -f 'cairo-rectangle.c' || echo '$(srcdir)/'`cairo-rectangle.c

libcairo_la-cairo-region.lo: cairo-region.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-region.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-region.Tpo -c -o libcairo_la-cairo-region.lo `test -f 'cairo-region.c' || echo '$(srcdir)/'`cairo-region.c
	mv -f $(DEPDIR)/libcairo_la-cairo-region.Tpo $(DEPDIR)/libcairo_la-cairo-region.Plo
#	source='cairo-region.c' object='libcairo_la-cairo-region.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-region.lo `test -f 'cairo-region.c' || echo '$(srcdir)/'`cairo-region.c

libcairo_la-cairo-scaled-font.lo: cairo-scaled-font.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-scaled-font.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-scaled-font.Tpo -c -o libcairo_la-cairo-scaled-font.lo `test -f 'cairo-scaled-font.c' || echo '$(srcdir)/'`cairo-scaled-font.c
	mv -f $(DEPDIR)/libcairo_la-cairo-scaled-font.Tpo $(DEPDIR)/libcairo_la-cairo-scaled-font.Plo
#	source='cairo-scaled-font.c' object='libcairo_la-cairo-scaled-font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-scaled-font.lo `test -f 'cairo-scaled-font.c' || echo '$(srcdir)/'`cairo-scaled-font.c

libcairo_la-cairo-skiplist.lo: cairo-skiplist.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-skiplist.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-skiplist.Tpo -c -o libcairo_la-cairo-skiplist.lo `test -f 'cairo-skiplist.c' || echo '$(srcdir)/'`cairo-skiplist.c
	mv -f $(DEPDIR)/libcairo_la-cairo-skiplist.Tpo $(DEPDIR)/libcairo_la-cairo-skiplist.Plo
#	source='cairo-skiplist.c' object='libcairo_la-cairo-skiplist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-skiplist.lo `test -f 'cairo-skiplist.c' || echo '$(srcdir)/'`cairo-skiplist.c

libcairo_la-cairo-slope.lo: cairo-slope.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-slope.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-slope.Tpo -c -o libcairo_la-cairo-slope.lo `test -f 'cairo-slope.c' || echo '$(srcdir)/'`cairo-slope.c
	mv -f $(DEPDIR)/libcairo_la-cairo-slope.Tpo $(DEPDIR)/libcairo_la-cairo-slope.Plo
#	source='cairo-slope.c' object='libcairo_la-cairo-slope.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-slope.lo `test -f 'cairo-slope.c' || echo '$(srcdir)/'`cairo-slope.c

libcairo_la-cairo-spline.lo: cairo-spline.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-spline.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-spline.Tpo -c -o libcairo_la-cairo-spline.lo `test -f 'cairo-spline.c' || echo '$(srcdir)/'`cairo-spline.c
	mv -f $(DEPDIR)/libcairo_la-cairo-spline.Tpo $(DEPDIR)/libcairo_la-cairo-spline.Plo
#	source='cairo-spline.c' object='libcairo_la-cairo-spline.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-spline.lo `test -f 'cairo-spline.c' || echo '$(srcdir)/'`cairo-spline.c

libcairo_la-cairo-stroke-style.lo: cairo-stroke-style.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-stroke-style.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-stroke-style.Tpo -c -o libcairo_la-cairo-stroke-style.lo `test -f 'cairo-stroke-style.c' || echo '$(srcdir)/'`cairo-stroke-style.c
	mv -f $(DEPDIR)/libcairo_la-cairo-stroke-style.Tpo $(DEPDIR)/libcairo_la-cairo-stroke-style.Plo
#	source='cairo-stroke-style.c' object='libcairo_la-cairo-stroke-style.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-stroke-style.lo `test -f 'cairo-stroke-style.c' || echo '$(srcdir)/'`cairo-stroke-style.c

libcairo_la-cairo-surface.lo: cairo-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-surface.Tpo -c -o libcairo_la-cairo-surface.lo `test -f 'cairo-surface.c' || echo '$(srcdir)/'`cairo-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-surface.Tpo $(DEPDIR)/libcairo_la-cairo-surface.Plo
#	source='cairo-surface.c' object='libcairo_la-cairo-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-surface.lo `test -f 'cairo-surface.c' || echo '$(srcdir)/'`cairo-surface.c

libcairo_la-cairo-surface-fallback.lo: cairo-surface-fallback.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-surface-fallback.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-surface-fallback.Tpo -c -o libcairo_la-cairo-surface-fallback.lo `test -f 'cairo-surface-fallback.c' || echo '$(srcdir)/'`cairo-surface-fallback.c
	mv -f $(DEPDIR)/libcairo_la-cairo-surface-fallback.Tpo $(DEPDIR)/libcairo_la-cairo-surface-fallback.Plo
#	source='cairo-surface-fallback.c' object='libcairo_la-cairo-surface-fallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-surface-fallback.lo `test -f 'cairo-surface-fallback.c' || echo '$(srcdir)/'`cairo-surface-fallback.c

libcairo_la-cairo-traps.lo: cairo-traps.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-traps.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-traps.Tpo -c -o libcairo_la-cairo-traps.lo `test -f 'cairo-traps.c' || echo '$(srcdir)/'`cairo-traps.c
	mv -f $(DEPDIR)/libcairo_la-cairo-traps.Tpo $(DEPDIR)/libcairo_la-cairo-traps.Plo
#	source='cairo-traps.c' object='libcairo_la-cairo-traps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-traps.lo `test -f 'cairo-traps.c' || echo '$(srcdir)/'`cairo-traps.c

libcairo_la-cairo-pattern.lo: cairo-pattern.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-pattern.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-pattern.Tpo -c -o libcairo_la-cairo-pattern.lo `test -f 'cairo-pattern.c' || echo '$(srcdir)/'`cairo-pattern.c
	mv -f $(DEPDIR)/libcairo_la-cairo-pattern.Tpo $(DEPDIR)/libcairo_la-cairo-pattern.Plo
#	source='cairo-pattern.c' object='libcairo_la-cairo-pattern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-pattern.lo `test -f 'cairo-pattern.c' || echo '$(srcdir)/'`cairo-pattern.c

libcairo_la-cairo-unicode.lo: cairo-unicode.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-unicode.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-unicode.Tpo -c -o libcairo_la-cairo-unicode.lo `test -f 'cairo-unicode.c' || echo '$(srcdir)/'`cairo-unicode.c
	mv -f $(DEPDIR)/libcairo_la-cairo-unicode.Tpo $(DEPDIR)/libcairo_la-cairo-unicode.Plo
#	source='cairo-unicode.c' object='libcairo_la-cairo-unicode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-unicode.lo `test -f 'cairo-unicode.c' || echo '$(srcdir)/'`cairo-unicode.c

libcairo_la-cairo-output-stream.lo: cairo-output-stream.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-output-stream.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-output-stream.Tpo -c -o libcairo_la-cairo-output-stream.lo `test -f 'cairo-output-stream.c' || echo '$(srcdir)/'`cairo-output-stream.c
	mv -f $(DEPDIR)/libcairo_la-cairo-output-stream.Tpo $(DEPDIR)/libcairo_la-cairo-output-stream.Plo
#	source='cairo-output-stream.c' object='libcairo_la-cairo-output-stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-output-stream.lo `test -f 'cairo-output-stream.c' || echo '$(srcdir)/'`cairo-output-stream.c

libcairo_la-cairo-wideint.lo: cairo-wideint.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-wideint.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-wideint.Tpo -c -o libcairo_la-cairo-wideint.lo `test -f 'cairo-wideint.c' || echo '$(srcdir)/'`cairo-wideint.c
	mv -f $(DEPDIR)/libcairo_la-cairo-wideint.Tpo $(DEPDIR)/libcairo_la-cairo-wideint.Plo
#	source='cairo-wideint.c' object='libcairo_la-cairo-wideint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-wideint.lo `test -f 'cairo-wideint.c' || echo '$(srcdir)/'`cairo-wideint.c

libcairo_la-cairo-meta-surface.lo: cairo-meta-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-meta-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-meta-surface.Tpo -c -o libcairo_la-cairo-meta-surface.lo `test -f 'cairo-meta-surface.c' || echo '$(srcdir)/'`cairo-meta-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-meta-surface.Tpo $(DEPDIR)/libcairo_la-cairo-meta-surface.Plo
#	source='cairo-meta-surface.c' object='libcairo_la-cairo-meta-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-meta-surface.lo `test -f 'cairo-meta-surface.c' || echo '$(srcdir)/'`cairo-meta-surface.c

libcairo_la-cairo-paginated-surface.lo: cairo-paginated-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-paginated-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-paginated-surface.Tpo -c -o libcairo_la-cairo-paginated-surface.lo `test -f 'cairo-paginated-surface.c' || echo '$(srcdir)/'`cairo-paginated-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-paginated-surface.Tpo $(DEPDIR)/libcairo_la-cairo-paginated-surface.Plo
#	source='cairo-paginated-surface.c' object='libcairo_la-cairo-paginated-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-paginated-surface.lo `test -f 'cairo-paginated-surface.c' || echo '$(srcdir)/'`cairo-paginated-surface.c

libcairo_la-cairo-analysis-surface.lo: cairo-analysis-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-analysis-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-analysis-surface.Tpo -c -o libcairo_la-cairo-analysis-surface.lo `test -f 'cairo-analysis-surface.c' || echo '$(srcdir)/'`cairo-analysis-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-analysis-surface.Tpo $(DEPDIR)/libcairo_la-cairo-analysis-surface.Plo
#	source='cairo-analysis-surface.c' object='libcairo_la-cairo-analysis-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-analysis-surface.lo `test -f 'cairo-analysis-surface.c' || echo '$(srcdir)/'`cairo-analysis-surface.c

libcairo_la-cairo-ps-surface.lo: cairo-ps-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-ps-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-ps-surface.Tpo -c -o libcairo_la-cairo-ps-surface.lo `test -f 'cairo-ps-surface.c' || echo '$(srcdir)/'`cairo-ps-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-ps-surface.Tpo $(DEPDIR)/libcairo_la-cairo-ps-surface.Plo
#	source='cairo-ps-surface.c' object='libcairo_la-cairo-ps-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-ps-surface.lo `test -f 'cairo-ps-surface.c' || echo '$(srcdir)/'`cairo-ps-surface.c

libcairo_la-cairo-pdf-surface.lo: cairo-pdf-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-pdf-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-pdf-surface.Tpo -c -o libcairo_la-cairo-pdf-surface.lo `test -f 'cairo-pdf-surface.c' || echo '$(srcdir)/'`cairo-pdf-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-pdf-surface.Tpo $(DEPDIR)/libcairo_la-cairo-pdf-surface.Plo
#	source='cairo-pdf-surface.c' object='libcairo_la-cairo-pdf-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-pdf-surface.lo `test -f 'cairo-pdf-surface.c' || echo '$(srcdir)/'`cairo-pdf-surface.c

libcairo_la-cairo-pdf-operators.lo: cairo-pdf-operators.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-pdf-operators.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-pdf-operators.Tpo -c -o libcairo_la-cairo-pdf-operators.lo `test -f 'cairo-pdf-operators.c' || echo '$(srcdir)/'`cairo-pdf-operators.c
	mv -f $(DEPDIR)/libcairo_la-cairo-pdf-operators.Tpo $(DEPDIR)/libcairo_la-cairo-pdf-operators.Plo
#	source='cairo-pdf-operators.c' object='libcairo_la-cairo-pdf-operators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-pdf-operators.lo `test -f 'cairo-pdf-operators.c' || echo '$(srcdir)/'`cairo-pdf-operators.c

libcairo_la-cairo-deflate-stream.lo: cairo-deflate-stream.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-deflate-stream.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-deflate-stream.Tpo -c -o libcairo_la-cairo-deflate-stream.lo `test -f 'cairo-deflate-stream.c' || echo '$(srcdir)/'`cairo-deflate-stream.c
	mv -f $(DEPDIR)/libcairo_la-cairo-deflate-stream.Tpo $(DEPDIR)/libcairo_la-cairo-deflate-stream.Plo
#	source='cairo-deflate-stream.c' object='libcairo_la-cairo-deflate-stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-deflate-stream.lo `test -f 'cairo-deflate-stream.c' || echo '$(srcdir)/'`cairo-deflate-stream.c

libcairo_la-cairo-png.lo: cairo-png.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-png.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-png.Tpo -c -o libcairo_la-cairo-png.lo `test -f 'cairo-png.c' || echo '$(srcdir)/'`cairo-png.c
	mv -f $(DEPDIR)/libcairo_la-cairo-png.Tpo $(DEPDIR)/libcairo_la-cairo-png.Plo
#	source='cairo-png.c' object='libcairo_la-cairo-png.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-png.lo `test -f 'cairo-png.c' || echo '$(srcdir)/'`cairo-png.c

libcairo_la-cairo-svg-surface.lo: cairo-svg-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-svg-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-svg-surface.Tpo -c -o libcairo_la-cairo-svg-surface.lo `test -f 'cairo-svg-surface.c' || echo '$(srcdir)/'`cairo-svg-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-svg-surface.Tpo $(DEPDIR)/libcairo_la-cairo-svg-surface.Plo
#	source='cairo-svg-surface.c' object='libcairo_la-cairo-svg-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-svg-surface.lo `test -f 'cairo-svg-surface.c' || echo '$(srcdir)/'`cairo-svg-surface.c

libcairo_la-cairo-cff-subset.lo: cairo-cff-subset.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-cff-subset.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-cff-subset.Tpo -c -o libcairo_la-cairo-cff-subset.lo `test -f 'cairo-cff-subset.c' || echo '$(srcdir)/'`cairo-cff-subset.c
	mv -f $(DEPDIR)/libcairo_la-cairo-cff-subset.Tpo $(DEPDIR)/libcairo_la-cairo-cff-subset.Plo
#	source='cairo-cff-subset.c' object='libcairo_la-cairo-cff-subset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-cff-subset.lo `test -f 'cairo-cff-subset.c' || echo '$(srcdir)/'`cairo-cff-subset.c

libcairo_la-cairo-truetype-subset.lo: cairo-truetype-subset.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-truetype-subset.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-truetype-subset.Tpo -c -o libcairo_la-cairo-truetype-subset.lo `test -f 'cairo-truetype-subset.c' || echo '$(srcdir)/'`cairo-truetype-subset.c
	mv -f $(DEPDIR)/libcairo_la-cairo-truetype-subset.Tpo $(DEPDIR)/libcairo_la-cairo-truetype-subset.Plo
#	source='cairo-truetype-subset.c' object='libcairo_la-cairo-truetype-subset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-truetype-subset.lo `test -f 'cairo-truetype-subset.c' || echo '$(srcdir)/'`cairo-truetype-subset.c

libcairo_la-cairo-type1-fallback.lo: cairo-type1-fallback.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-type1-fallback.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-type1-fallback.Tpo -c -o libcairo_la-cairo-type1-fallback.lo `test -f 'cairo-type1-fallback.c' || echo '$(srcdir)/'`cairo-type1-fallback.c
	mv -f $(DEPDIR)/libcairo_la-cairo-type1-fallback.Tpo $(DEPDIR)/libcairo_la-cairo-type1-fallback.Plo
#	source='cairo-type1-fallback.c' object='libcairo_la-cairo-type1-fallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-type1-fallback.lo `test -f 'cairo-type1-fallback.c' || echo '$(srcdir)/'`cairo-type1-fallback.c

libcairo_la-cairo-scaled-font-subsets.lo: cairo-scaled-font-subsets.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-scaled-font-subsets.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-scaled-font-subsets.Tpo -c -o libcairo_la-cairo-scaled-font-subsets.lo `test -f 'cairo-scaled-font-subsets.c' || echo '$(srcdir)/'`cairo-scaled-font-subsets.c
	mv -f $(DEPDIR)/libcairo_la-cairo-scaled-font-subsets.Tpo $(DEPDIR)/libcairo_la-cairo-scaled-font-subsets.Plo
#	source='cairo-scaled-font-subsets.c' object='libcairo_la-cairo-scaled-font-subsets.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-scaled-font-subsets.lo `test -f 'cairo-scaled-font-subsets.c' || echo '$(srcdir)/'`cairo-scaled-font-subsets.c

libcairo_la-cairo-type1-subset.lo: cairo-type1-subset.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-type1-subset.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-type1-subset.Tpo -c -o libcairo_la-cairo-type1-subset.lo `test -f 'cairo-type1-subset.c' || echo '$(srcdir)/'`cairo-type1-subset.c
	mv -f $(DEPDIR)/libcairo_la-cairo-type1-subset.Tpo $(DEPDIR)/libcairo_la-cairo-type1-subset.Plo
#	source='cairo-type1-subset.c' object='libcairo_la-cairo-type1-subset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-type1-subset.lo `test -f 'cairo-type1-subset.c' || echo '$(srcdir)/'`cairo-type1-subset.c

libcairo_la-test-fallback-surface.lo: test-fallback-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-test-fallback-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-test-fallback-surface.Tpo -c -o libcairo_la-test-fallback-surface.lo `test -f 'test-fallback-surface.c' || echo '$(srcdir)/'`test-fallback-surface.c
	mv -f $(DEPDIR)/libcairo_la-test-fallback-surface.Tpo $(DEPDIR)/libcairo_la-test-fallback-surface.Plo
#	source='test-fallback-surface.c' object='libcairo_la-test-fallback-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-test-fallback-surface.lo `test -f 'test-fallback-surface.c' || echo '$(srcdir)/'`test-fallback-surface.c

libcairo_la-test-meta-surface.lo: test-meta-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-test-meta-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-test-meta-surface.Tpo -c -o libcairo_la-test-meta-surface.lo `test -f 'test-meta-surface.c' || echo '$(srcdir)/'`test-meta-surface.c
	mv -f $(DEPDIR)/libcairo_la-test-meta-surface.Tpo $(DEPDIR)/libcairo_la-test-meta-surface.Plo
#	source='test-meta-surface.c' object='libcairo_la-test-meta-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-test-meta-surface.lo `test -f 'test-meta-surface.c' || echo '$(srcdir)/'`test-meta-surface.c

libcairo_la-test-paginated-surface.lo: test-paginated-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-test-paginated-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-test-paginated-surface.Tpo -c -o libcairo_la-test-paginated-surface.lo `test -f 'test-paginated-surface.c' || echo '$(srcdir)/'`test-paginated-surface.c
	mv -f $(DEPDIR)/libcairo_la-test-paginated-surface.Tpo $(DEPDIR)/libcairo_la-test-paginated-surface.Plo
#	source='test-paginated-surface.c' object='libcairo_la-test-paginated-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-test-paginated-surface.lo `test -f 'test-paginated-surface.c' || echo '$(srcdir)/'`test-paginated-surface.c

libcairo_la-cairo-xlib-surface.lo: cairo-xlib-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-xlib-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-xlib-surface.Tpo -c -o libcairo_la-cairo-xlib-surface.lo `test -f 'cairo-xlib-surface.c' || echo '$(srcdir)/'`cairo-xlib-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-xlib-surface.Tpo $(DEPDIR)/libcairo_la-cairo-xlib-surface.Plo
#	source='cairo-xlib-surface.c' object='libcairo_la-cairo-xlib-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-xlib-surface.lo `test -f 'cairo-xlib-surface.c' || echo '$(srcdir)/'`cairo-xlib-surface.c

libcairo_la-cairo-xlib-display.lo: cairo-xlib-display.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-xlib-display.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-xlib-display.Tpo -c -o libcairo_la-cairo-xlib-display.lo `test -f 'cairo-xlib-display.c' || echo '$(srcdir)/'`cairo-xlib-display.c
	mv -f $(DEPDIR)/libcairo_la-cairo-xlib-display.Tpo $(DEPDIR)/libcairo_la-cairo-xlib-display.Plo
#	source='cairo-xlib-display.c' object='libcairo_la-cairo-xlib-display.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-xlib-display.lo `test -f 'cairo-xlib-display.c' || echo '$(srcdir)/'`cairo-xlib-display.c

libcairo_la-cairo-xlib-screen.lo: cairo-xlib-screen.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-xlib-screen.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-xlib-screen.Tpo -c -o libcairo_la-cairo-xlib-screen.lo `test -f 'cairo-xlib-screen.c' || echo '$(srcdir)/'`cairo-xlib-screen.c
	mv -f $(DEPDIR)/libcairo_la-cairo-xlib-screen.Tpo $(DEPDIR)/libcairo_la-cairo-xlib-screen.Plo
#	source='cairo-xlib-screen.c' object='libcairo_la-cairo-xlib-screen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-xlib-screen.lo `test -f 'cairo-xlib-screen.c' || echo '$(srcdir)/'`cairo-xlib-screen.c

libcairo_la-cairo-xlib-visual.lo: cairo-xlib-visual.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-xlib-visual.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-xlib-visual.Tpo -c -o libcairo_la-cairo-xlib-visual.lo `test -f 'cairo-xlib-visual.c' || echo '$(srcdir)/'`cairo-xlib-visual.c
	mv -f $(DEPDIR)/libcairo_la-cairo-xlib-visual.Tpo $(DEPDIR)/libcairo_la-cairo-xlib-visual.Plo
#	source='cairo-xlib-visual.c' object='libcairo_la-cairo-xlib-visual.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-xlib-visual.lo `test -f 'cairo-xlib-visual.c' || echo '$(srcdir)/'`cairo-xlib-visual.c

libcairo_la-cairo-xcb-surface.lo: cairo-xcb-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-xcb-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-xcb-surface.Tpo -c -o libcairo_la-cairo-xcb-surface.lo `test -f 'cairo-xcb-surface.c' || echo '$(srcdir)/'`cairo-xcb-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-xcb-surface.Tpo $(DEPDIR)/libcairo_la-cairo-xcb-surface.Plo
#	source='cairo-xcb-surface.c' object='libcairo_la-cairo-xcb-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-xcb-surface.lo `test -f 'cairo-xcb-surface.c' || echo '$(srcdir)/'`cairo-xcb-surface.c

libcairo_la-cairo-quartz-surface.lo: cairo-quartz-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-quartz-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-quartz-surface.Tpo -c -o libcairo_la-cairo-quartz-surface.lo `test -f 'cairo-quartz-surface.c' || echo '$(srcdir)/'`cairo-quartz-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-quartz-surface.Tpo $(DEPDIR)/libcairo_la-cairo-quartz-surface.Plo
#	source='cairo-quartz-surface.c' object='libcairo_la-cairo-quartz-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-quartz-surface.lo `test -f 'cairo-quartz-surface.c' || echo '$(srcdir)/'`cairo-quartz-surface.c

libcairo_la-cairo-quartz-image-surface.lo: cairo-quartz-image-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-quartz-image-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-quartz-image-surface.Tpo -c -o libcairo_la-cairo-quartz-image-surface.lo `test -f 'cairo-quartz-image-surface.c' || echo '$(srcdir)/'`cairo-quartz-image-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-quartz-image-surface.Tpo $(DEPDIR)/libcairo_la-cairo-quartz-image-surface.Plo
#	source='cairo-quartz-image-surface.c' object='libcairo_la-cairo-quartz-image-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-quartz-image-surface.lo `test -f 'cairo-quartz-image-surface.c' || echo '$(srcdir)/'`cairo-quartz-image-surface.c

libcairo_la-cairo-quartz-font.lo: cairo-quartz-font.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-quartz-font.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-quartz-font.Tpo -c -o libcairo_la-cairo-quartz-font.lo `test -f 'cairo-quartz-font.c' || echo '$(srcdir)/'`cairo-quartz-font.c
	mv -f $(DEPDIR)/libcairo_la-cairo-quartz-font.Tpo $(DEPDIR)/libcairo_la-cairo-quartz-font.Plo
#	source='cairo-quartz-font.c' object='libcairo_la-cairo-quartz-font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-quartz-font.lo `test -f 'cairo-quartz-font.c' || echo '$(srcdir)/'`cairo-quartz-font.c

libcairo_la-cairo-win32.lo: cairo-win32.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-win32.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-win32.Tpo -c -o libcairo_la-cairo-win32.lo `test -f 'cairo-win32.c' || echo '$(srcdir)/'`cairo-win32.c
	mv -f $(DEPDIR)/libcairo_la-cairo-win32.Tpo $(DEPDIR)/libcairo_la-cairo-win32.Plo
#	source='cairo-win32.c' object='libcairo_la-cairo-win32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-win32.lo `test -f 'cairo-win32.c' || echo '$(srcdir)/'`cairo-win32.c

libcairo_la-cairo-win32-surface.lo: cairo-win32-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-win32-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-win32-surface.Tpo -c -o libcairo_la-cairo-win32-surface.lo `test -f 'cairo-win32-surface.c' || echo '$(srcdir)/'`cairo-win32-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-win32-surface.Tpo $(DEPDIR)/libcairo_la-cairo-win32-surface.Plo
#	source='cairo-win32-surface.c' object='libcairo_la-cairo-win32-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-win32-surface.lo `test -f 'cairo-win32-surface.c' || echo '$(srcdir)/'`cairo-win32-surface.c

libcairo_la-cairo-win32-printing-surface.lo: cairo-win32-printing-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-win32-printing-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-win32-printing-surface.Tpo -c -o libcairo_la-cairo-win32-printing-surface.lo `test -f 'cairo-win32-printing-surface.c' || echo '$(srcdir)/'`cairo-win32-printing-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-win32-printing-surface.Tpo $(DEPDIR)/libcairo_la-cairo-win32-printing-surface.Plo
#	source='cairo-win32-printing-surface.c' object='libcairo_la-cairo-win32-printing-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-win32-printing-surface.lo `test -f 'cairo-win32-printing-surface.c' || echo '$(srcdir)/'`cairo-win32-printing-surface.c

libcairo_la-cairo-win32-font.lo: cairo-win32-font.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-win32-font.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-win32-font.Tpo -c -o libcairo_la-cairo-win32-font.lo `test -f 'cairo-win32-font.c' || echo '$(srcdir)/'`cairo-win32-font.c
	mv -f $(DEPDIR)/libcairo_la-cairo-win32-font.Tpo $(DEPDIR)/libcairo_la-cairo-win32-font.Plo
#	source='cairo-win32-font.c' object='libcairo_la-cairo-win32-font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-win32-font.lo `test -f 'cairo-win32-font.c' || echo '$(srcdir)/'`cairo-win32-font.c

libcairo_la-cairo-os2-surface.lo: cairo-os2-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-os2-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-os2-surface.Tpo -c -o libcairo_la-cairo-os2-surface.lo `test -f 'cairo-os2-surface.c' || echo '$(srcdir)/'`cairo-os2-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-os2-surface.Tpo $(DEPDIR)/libcairo_la-cairo-os2-surface.Plo
#	source='cairo-os2-surface.c' object='libcairo_la-cairo-os2-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-os2-surface.lo `test -f 'cairo-os2-surface.c' || echo '$(srcdir)/'`cairo-os2-surface.c

libcairo_la-cairo-glitz-surface.lo: cairo-glitz-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-glitz-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-glitz-surface.Tpo -c -o libcairo_la-cairo-glitz-surface.lo `test -f 'cairo-glitz-surface.c' || echo '$(srcdir)/'`cairo-glitz-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-glitz-surface.Tpo $(DEPDIR)/libcairo_la-cairo-glitz-surface.Plo
#	source='cairo-glitz-surface.c' object='libcairo_la-cairo-glitz-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-glitz-surface.lo `test -f 'cairo-glitz-surface.c' || echo '$(srcdir)/'`cairo-glitz-surface.c

libcairo_la-cairo-directfb-surface.lo: cairo-directfb-surface.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-directfb-surface.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-directfb-surface.Tpo -c -o libcairo_la-cairo-directfb-surface.lo `test -f 'cairo-directfb-surface.c' || echo '$(srcdir)/'`cairo-directfb-surface.c
	mv -f $(DEPDIR)/libcairo_la-cairo-directfb-surface.Tpo $(DEPDIR)/libcairo_la-cairo-directfb-surface.Plo
#	source='cairo-directfb-surface.c' object='libcairo_la-cairo-directfb-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-directfb-surface.lo `test -f 'cairo-directfb-surface.c' || echo '$(srcdir)/'`cairo-directfb-surface.c

libcairo_la-cairo-ft-font.lo: cairo-ft-font.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -MT libcairo_la-cairo-ft-font.lo -MD -MP -MF $(DEPDIR)/libcairo_la-cairo-ft-font.Tpo -c -o libcairo_la-cairo-ft-font.lo `test -f 'cairo-ft-font.c' || echo '$(srcdir)/'`cairo-ft-font.c
	mv -f $(DEPDIR)/libcairo_la-cairo-ft-font.Tpo $(DEPDIR)/libcairo_la-cairo-ft-font.Plo
#	source='cairo-ft-font.c' object='libcairo_la-cairo-ft-font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairo_la_CFLAGS) $(CFLAGS) -c -o libcairo_la-cairo-ft-font.lo `test -f 'cairo-ft-font.c' || echo '$(srcdir)/'`cairo-ft-font.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am

$(backend_pkgconfigs): $(top_srcdir)/configure
	cd $(top_builddir) && ./config.status --recheck

$(top_builddir)/config.h: $(top_srcdir)/config.h.in
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) config.h
cairo-features.h cairo-no-features.h:
	cd $(top_builddir) && ./config.status src/$@
cairo.def: $(cairo_headers) cairo-features.h
	@echo Generating $@
	@(echo EXPORTS; \
	(cd $(srcdir); cat $(cairo_headers) || echo 'cairo_ERROR ()' ) | \
	grep -v -E '^# *include' | \
	( gcc -include cairo-features.h -E - || echo 'cairo_ERROR ()' ) | \
	grep -E '^cairo_.* \(' | \
	sed -e 's/[ 	].*//' | \
	sort; \
	echo LIBRARY libcairo-$(LT_CURRENT_MINUS_AGE).dll; \
	) >$@
	@ ! grep -q cairo_ERROR $@ || ($(RM) $@; false)

install-data-local:
	@if test -f "$(DESTDIR)$(includedir)/cairo.h" || test -f "$(DESTDIR)$(includedir)/cairo-features.h" ; then \
	  echo "****************************************************************" ;	\
	  echo "*** Error: Old headers found. You should remove the following" ;	\
	  echo "***        files and then type 'make install' again." ;			\
	  ls $(includedir)/cairo*.h ;							\
	  echo "****************************************************************" ;	\
	  false ;									\
        fi

# The pre-processed result is used by check-{def,plt}.sh to determine whether
# cairo has been compiled with symbol hiding.
.c.i: $(noinst_HEADERS) $(nodist_noinst_HEADERS) cairoint.h $(top_builddir)/config.h
	$(CPP) -DHAVE_CONFIG_H -I$(top_builddir) -I. $(libcairo_la_CFLAGS) $< -o $@
sparse:
	@status=true; for f in $(cairo_sources); do \
		echo sparse $$f; \
		$(SPARSE) -I$(top_builddir) $(libcairo_la_CFLAGS) -DHAVE_CONFIG_H $$f || status=false; \
	done; $$status
splint:
	@status=true; for f in $(cairo_sources); do \
		test "$$f" = "`echo "$$f" | sed 's/[.]h$$//'`" || continue; \
		echo sparse $$f; \
		$(SPLINT) -I$(top_builddir) $(libcairo_la_CFLAGS) -DHAVE_CONFIG_H $$f || status=false; \
	done; $$status
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
